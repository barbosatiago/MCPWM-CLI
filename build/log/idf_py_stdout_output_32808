[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Client\Desktop\MCPWM\sample_project\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/Client/Desktop/MCPWM/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/9] Building C object esp-idf/CLI/CMakeFiles/__idf_CLI.dir/FreeRTOS_CLI.c.obj
[3/9] Linking C static library esp-idf\CLI\libCLI.a
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/main.elf.dir/project_elf_src_esp32s3.c.obj
[7/9] Linking CXX executable main.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/Client/Desktop/MCPWM/sample_project/build/main.bin
[9/9] cmd.exe /C "cd /D C:\Users\Client\Desktop\MCPWM\sample_project\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Client/Desktop/MCPWM/sample_project/build/partition_table/partition-table.bin C:/Users/Client/Desktop/MCPWM/sample_project/build/main.bin"
main.bin binary size 0x3eae0 bytes. Smallest app partition is 0x100000 bytes. 0xc1520 bytes (76%) free.
