[1/29] Linking C static library esp-idf\espcoredump\libespcoredump.a
[2/29] Linking C static library esp-idf\protobuf-c\libprotobuf-c.a
[3/29] Linking C static library esp-idf\esp_lcd\libesp_lcd.a
[4/29] Linking C static library esp-idf\wear_levelling\libwear_levelling.a
[5/29] Linking C static library esp-idf\sdmmc\libsdmmc.a
[6/29] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Client\Desktop\MCPWM\sample_project\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/Client/Desktop/MCPWM/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[7/29] Linking C static library esp-idf\json\libjson.a
[8/29] Linking C static library esp-idf\mqtt\libmqtt.a
[9/29] No install step for 'bootloader'
[10/29] Linking C static library esp-idf\nvs_sec_provider\libnvs_sec_provider.a
[11/29] Linking C static library esp-idf\protocomm\libprotocomm.a
[12/29] Linking C static library esp-idf\fatfs\libfatfs.a
[13/29] Linking C static library esp-idf\perfmon\libperfmon.a
[14/29] Completed 'bootloader'
[15/29] Linking C static library esp-idf\touch_element\libtouch_element.a
[16/29] Linking C static library esp-idf\spiffs\libspiffs.a
[17/29] Linking C static library esp-idf\esp_local_ctrl\libesp_local_ctrl.a
[18/29] Linking C static library esp-idf\usb\libusb.a
[19/29] Linking C static library esp-idf\MCPWM\libMCPWM.a
[20/29] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[21/29] Building C object esp-idf/multscan_shell/CMakeFiles/__idf_multscan_shell.dir/multscan_shell.c.obj
[22/29] Linking C static library esp-idf\multscan_shell\libmultscan_shell.a
[23/29] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c: In function 'init_mcpwm_par':
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:266:21: warning: initialization of '_Bool (*)(struct mcpwm_cmpr_t *, const mcpwm_compare_event_data_t *, void *)' from incompatible pointer type '_Bool (*)(struct mcpwm_cmpr_t *, void *)' [-Wincompatible-pointer-types]
  266 |         .on_reach = callback_mcpwm_par,
      |                     ^~~~~~~~~~~~~~~~~~
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:266:21: note: (near initialization for 'compare_callback_par.on_reach')
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c: In function 'init_mcpwm_impar':
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:366:21: warning: initialization of '_Bool (*)(struct mcpwm_cmpr_t *, const mcpwm_compare_event_data_t *, void *)' from incompatible pointer type '_Bool (*)(struct mcpwm_cmpr_t *, void *)' [-Wincompatible-pointer-types]
  366 |         .on_reach = callback_mcpwm_impar_leds,
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:366:21: note: (near initialization for 'compare_callback_impar.on_reach')
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c: In function 'callback_mcpwm_teste':
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:418:13: warning: unused variable 'controle_impar' [-Wunused-variable]
  418 |     uint8_t controle_impar[BUFFER_CIRCULAR_SIZE] = {1, 0, 1, 0};
      |             ^~~~~~~~~~~~~~
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:416:13: warning: unused variable 'controle_par' [-Wunused-variable]
  416 |     uint8_t controle_par[BUFFER_CIRCULAR_SIZE] = {0, 1, 0, 1};
      |             ^~~~~~~~~~~~
C:/Users/Client/Desktop/MCPWM/sample_project/main/main.c:414:14: warning: unused variable 'CMD' [-Wunused-variable]
  414 |     uint32_t CMD; // CMD dos tasks notify
      |              ^~~
[24/29] Linking C static library esp-idf\main\libmain.a
[25/29] Generating ld/sections.ld
[26/29] Building C object CMakeFiles/main.elf.dir/project_elf_src_esp32s3.c.obj
[27/29] Linking CXX executable main.elf
[28/29] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/Client/Desktop/MCPWM/sample_project/build/main.bin
[29/29] cmd.exe /C "cd /D C:\Users\Client\Desktop\MCPWM\sample_project\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Client/Desktop/MCPWM/sample_project/build/partition_table/partition-table.bin C:/Users/Client/Desktop/MCPWM/sample_project/build/main.bin"
main.bin binary size 0x3a7f0 bytes. Smallest app partition is 0x100000 bytes. 0xc5810 bytes (77%) free.
