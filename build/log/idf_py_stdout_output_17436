[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\tiago\OneDrive\Documentos\REPOSITORIOS\MCPWM-CLI\build\bootloader\esp-idf\esptool_py && E:\Espressif\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/Espressif/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/tiago/OneDrive/Documentos/REPOSITORIOS/MCPWM-CLI/build/bootloader/bootloader.bin"
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/7] Building C object esp-idf/CLI/CMakeFiles/__idf_CLI.dir/FreeRTOS_CLI.c.obj
[3/7] Linking C static library esp-idf\CLI\libCLI.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable main.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/tiago/OneDrive/Documentos/REPOSITORIOS/MCPWM-CLI/build/main.bin
[7/7] cmd.exe /C "cd /D C:\Users\tiago\OneDrive\Documentos\REPOSITORIOS\MCPWM-CLI\build\esp-idf\esptool_py && E:\Espressif\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/Espressif/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/tiago/OneDrive/Documentos/REPOSITORIOS/MCPWM-CLI/build/partition_table/partition-table.bin C:/Users/tiago/OneDrive/Documentos/REPOSITORIOS/MCPWM-CLI/build/main.bin"
main.bin binary size 0x42b00 bytes. Smallest app partition is 0x100000 bytes. 0xbd500 bytes (74%) free.
